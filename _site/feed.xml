<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-02-10T11:01:56+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Maxime Dimidschstein</title><subtitle>Personal website of Maxime Dimidschstein</subtitle><entry><title type="html">Sunseï</title><link href="http://localhost:4000/Sunsei/" rel="alternate" type="text/html" title="Sunseï" /><published>2019-02-01T10:00:00+01:00</published><updated>2019-02-01T10:00:00+01:00</updated><id>http://localhost:4000/Sunsei</id><content type="html" xml:base="http://localhost:4000/Sunsei/">&lt;p&gt;Building and selling a smart energy monitor for solar panels.
Visit our &lt;a href=&quot;www.sunsei.be&quot;&gt;website&lt;/a&gt; for more info.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;While working on &lt;a href=&quot;http://localhost:4000/Pushroom&quot;&gt;Pushroom&lt;/a&gt; with a friend, we got hooked on IoT and the possibilities it offers.
We decided to move on from the small gadget that the previous project was to work on helping the owners of photovoltaic systems to better use their electricity.&lt;/p&gt;

&lt;p&gt;The problem is fairly simple: solar panels produce energy during the day, while people tend to consume it in the evening.
This causes extensive exchanges between the house and the grid: first to inject the excess of electricity produced, and then a second time to pump back electricity from the grid.
This leads to increased costs for the network manager.
Therefore, most countries are implementing strategies to compensate those costs, and they generally require the households to pay for their use of the grid.&lt;/p&gt;

&lt;p&gt;The best way to ensure the profitability of a photovoltaic system is to maximize self-consumption: that is to directly consume the electricity produced, without using the grid.
Two strategies (which can be combined) exist: shifting the supply, or shifting the demand.
The first is usually done with batteries that store electricity during the day to be used later.
For our project, we decided to focus on the second.&lt;/p&gt;

&lt;p&gt;Sunseï is a smart monitor for solar panels.
It takes into account the weather forecast and the real-time production/consumption of the house to determine the optimal time to use different appliances.
In the morning, or the day before, the house occupants set up those appliances (e.g. washing machine, dryer, dishwasher…) and create a task list.
The monitor then predicts the best schedule to maximize self-consumption.
When the time comes, it communicates through the Internet of Things (IoT) with the appliances to turn them on and off.
This can also be done with simple smart plugs, there is no need to replace old machines.&lt;/p&gt;

&lt;p&gt;We currently are a team of 4 students: two engineering, one business and one law student.
We are hosted by the &lt;a href=&quot;https://www.yncubator.be&quot;&gt;Yncubator&lt;/a&gt;, and we follow the entrepreneurship program of our university (&lt;a href=&quot;https://uclouvain.be/en/faculties/lsm/cpme&quot;&gt;CPME&lt;/a&gt;).
The prototype is in development.&lt;/p&gt;

&lt;center&gt;&lt;img class=&quot;image&quot; src=&quot;http://localhost:4000/assets/images/sunsei_gif.gif&quot; alt=&quot;Alt Text&quot; /&gt;&lt;/center&gt;</content><author><name></name></author><category term="project" /><category term="Entrepreneurship" /><category term="Prototyping" /><category term="Python" /><category term="Raspberry Pi" /><category term="IoT" /><summary type="html">Building and selling a smart energy monitor for solar panels. Visit our website for more info.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/sunsei_logo.png" /></entry><entry><title type="html">Analyzing IRA tweets</title><link href="http://localhost:4000/IRA/" rel="alternate" type="text/html" title="Analyzing IRA tweets" /><published>2018-12-30T10:00:00+01:00</published><updated>2018-12-30T10:00:00+01:00</updated><id>http://localhost:4000/IRA</id><content type="html" xml:base="http://localhost:4000/IRA/">&lt;p&gt;Analyzing tweets created by Russian trolls to influence politics in the USA and in Ukraine.
&lt;a href=&quot;https://abaracadacabara.github.io&quot;&gt;Read the full data story.&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For the final project of the &lt;a href=&quot;https://dlab.epfl.ch/teaching/fall2018/cs401/&quot;&gt;Applied Data Analysis&lt;/a&gt; course at EPFL,
I worked with two friends on a &lt;a href=&quot;https://about.twitter.com/en_us/values/elections-integrity.html#data&quot;&gt;Twitter dataset&lt;/a&gt; containing around 10 million troll tweets written by the &lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Research_Agency&quot;&gt;Internet Research Agency (IRA)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We wanted to dig into the data to discover a strategy behind those tweets and to determine the impact they had.
We mainly focused on posts written in English, which mostly concern American politics, and the 2016 presidential elections.
We also took a look at Russian messages, which speak a lot about Ukraine.
This allowed us to compare the behavior of the trolls in two different contexts.&lt;/p&gt;

&lt;p&gt;The full &lt;a href=&quot;https://abaracadacabara.github.io&quot;&gt;data story&lt;/a&gt; contains our detailed analysis and results.&lt;/p&gt;

&lt;p&gt;In short, we conducted our observations along three axis:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Temporal analysis&lt;/strong&gt;: We compared the activity of the trolls with the major events happening in the world.
Peaks of activity often correspond to important events: war in Ukraine, Hillary Clinton email controversy, Putin’s reelection…
It also appears that the number of troll accounts grew drastically in 2014.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Textual analysis&lt;/strong&gt;: A first look at the contents of the tweets proved that the vocabulary of the trolls is different from the average user: “Trump” is their favorite word!
Then, we performed a sentiment analysis.
The results were mostly even between Trump, Obama and Hillary, although slightly more positive towards Trump.
However, when comparing Russia and Ukraine, we can see that the trolls are much more negative towards Ukraine.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Relationships analysis&lt;/strong&gt;: We observed the relations of the trolls both with other trolls and with the rest of Twitter through retweets.
There is a clear difference of behavior between the two “species”.
Russian speaking accounts focus on spreading (fake) news issued by Russian media agencies.
Interestingly, most of those agencies have undergone major changes around 2014.
English speaking trolls attempt to look more human, they do not talk exclusively about politics.
They are also much more diverse: there are different categories of accounts, with different political opinions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a conclusion, we found it was hard to really measure the impact of IRA, although we could see they managed to spread their messages outside of their network.
Some trolls even &lt;a href=&quot;https://www.washingtonpost.com/news/politics/wp/2017/11/02/at-least-five-people-close-to-trump-engaged-with-russian-twitter-trolls-from-2015-to-2017/?utm_term=.b6930f43d394&quot;&gt;interacted with relatives of Trump&lt;/a&gt;.
It is however much easier to observe a clear strategy behind the tweets.
Russian speaking accounts attempt to flood Twitter with propaganda messages ;
English speaking accounts try to divide people by confronting conflicting opinions.&lt;/p&gt;</content><author><name></name></author><category term="project" /><category term="Data Science" /><category term="Python" /><category term="Pandas" /><category term="Spark" /><summary type="html">Analyzing tweets created by Russian trolls to influence politics in the USA and in Ukraine. Read the full data story.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/trolltweet.png" /></entry><entry><title type="html">Building a decentralized application</title><link href="http://localhost:4000/Blockchain/" rel="alternate" type="text/html" title="Building a decentralized application" /><published>2018-12-15T10:00:00+01:00</published><updated>2018-12-15T10:00:00+01:00</updated><id>http://localhost:4000/Blockchain</id><content type="html" xml:base="http://localhost:4000/Blockchain/">&lt;p&gt;Learning the basics of blockchain by building a decentralized application in Go.
&lt;a href=&quot;https://github.com/MaxDimi/Peerster&quot;&gt;Github Repository&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For the &lt;a href=&quot;http://edu.epfl.ch/coursebook/en/decentralized-systems-engineering-CS-438&quot;&gt;Decentralized Systems Engineering&lt;/a&gt; course at EPFL, I built a peer-to-peer application over UDP.
The main steps and functionalities were:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Gossiping protocol&lt;/strong&gt;: allow peers to communicate between each other and let them spread their messages through the network. They also need to keep track of the messages they already got, in order to ask for the ones they missed.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;File sharing&lt;/strong&gt;: files can be uploaded and shared amongst peers.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;File searching&lt;/strong&gt;: peers can search for files by using keywords, and download them when they are found.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Blockchain mining&lt;/strong&gt;: files are wrapped into blocks and then mined to ensure that no two different files share the same name. Consensus is reached through the Nakamoto protocol.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For the final step, we were free to extend the basic implementation with a functionality of our choice.
I added transfers with condition.
For this, I implemented a basic cryptomoney system, protected by public/private keys belonging to each peer.
Then, I created transfers and added them to the blockchain.
A block catch-up mechanism was also necessary to ensure that new peers that join the network later on can get the current history of transfers.
Finally, I allowed conditions to be set on transfers.
I picked time conditions, but other types could be easily added.
A peer can define either a deadline or a delay after which the transfer will be completed.&lt;/p&gt;

&lt;p&gt;This project was very interesting and allowed me to learn a lot, both about Go (which I had never used before) and about decentralized applications.
It was a hands-on approach, which I really appreciated, and it sparked my interest for blockchain, smart contracts, and the multiple possibilities they offer.&lt;/p&gt;</content><author><name></name></author><category term="project" /><category term="Go" /><category term="Blockchain" /><category term="Decentralized systems" /><summary type="html">Learning the basics of blockchain by building a decentralized application in Go. Github Repository.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/blockchain.png" /></entry><entry><title type="html">Pushroom</title><link href="http://localhost:4000/Pushroom/" rel="alternate" type="text/html" title="Pushroom" /><published>2017-04-30T10:00:00+02:00</published><updated>2017-04-30T10:00:00+02:00</updated><id>http://localhost:4000/Pushroom</id><content type="html" xml:base="http://localhost:4000/Pushroom/">&lt;p&gt;Prototyping a connected button-pusher.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Before working on &lt;a href=&quot;http://localhost:4000/Sunsei&quot;&gt;Sunseï&lt;/a&gt;, I had the idea with a friend to develop Pushroom, a connected button-pusher.
The goal was to be able to turn (almost) any existing appliance into a connected object, by adding a small adaptator to it
that would press its button when prompted.
We also wanted to allow the pushers to interact with each other.
You could for example connect your alarm clock and your coffee machine.
That way, when you woke up and stopped the alarm clock, your coffee would start heating up, offering you those extra 2 minutes of bedtime we all want.&lt;/p&gt;

&lt;p&gt;Being both engineering students, we quickly decided to build a prototype, and took part in a hackathon organised by the &lt;a href=&quot;http://www.mic-belgique.be&quot;&gt;Microsoft Innovation Center&lt;/a&gt; in Mons, Belgium.
With the help of another friend, and with the available hardware, we tried to get a working result in 24 hours.
We decided to focus on light switches, as well as on a switch that opened a sliding door to access the building.&lt;/p&gt;

&lt;center&gt;&lt;img class=&quot;image&quot; src=&quot;http://localhost:4000/assets/images/pushroom_gif.gif&quot; alt=&quot;Alt Text&quot; /&gt;&lt;/center&gt;

&lt;p&gt;As a result, we built a frame that could be firmly attached to a switch while also being easy to remove.
We included a servo-motor that could turn both ways to turn the lights on and off.
We moved the motor and connected the pusher to the local wifi through a Raspberry Pi, which was powered by a portable battery.
Finally, everything was controlled via an Android app we built on the spot.&lt;/p&gt;</content><author><name></name></author><category term="project" /><category term="Entrepreneurship" /><category term="Prototyping" /><category term="Python" /><category term="Raspberry Pi" /><category term="Android" /><category term="IoT" /><summary type="html">Prototyping a connected button-pusher.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/pushroom_logo.png" /></entry></feed>